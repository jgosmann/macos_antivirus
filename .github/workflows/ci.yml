name: CI and release pipeline

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  sanity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: ansible_collections/jgosmann/macos_antivirus

      - name: Set up Python
        uses: actions/setup-python@v4.3.0
        with:
          python-version: '3.10'

      - uses: actions/cache@v3.0.11
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip

      - name: Install requirements
        run: pip install -r requirements.txt
        working-directory: ansible_collections/jgosmann/macos_antivirus

      - name: Run sanity checks
        run: ansible-test sanity -v
        working-directory: ansible_collections/jgosmann/macos_antivirus

  release:
    runs-on: ubuntu-latest
    needs: [sanity]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4.3.0
        with:
          python-version: '3.10'

      - name: Get version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/*/v}" >> $GITHUB_OUTPUT

      - name: Update version in galaxy.yml
        run: 'sed -i "s/^version: .*\$/version: ${{ steps.version.outputs.version }}/g" galaxy.yml'

      - name: Check version has been up-to-date
        run: test -z "$(git status -s)"

      - uses: actions/cache@v3.0.11
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Build release
        run: ansible-galaxy collection build

      - name: Set API tokin in configuration
        run: sed -i "s/\$ANSIBLE_GALAXY_TOKEN/${{ secrets.ANSIBLE_GALAXY_TOKEN }}/g" ".github/workflows/release-ansible.cfg"

      - name: Publish release
        run: ansible-galaxy collection publish 'jgosmann-macos_antivirus-${{ steps.version.outputs.version }}.tar.gz'
        env:
          ANSIBLE_CONFIG: .github/workflows/release-ansible.cfg

      - name: Extract changelog
        id: changelog
        run: sed -E -n '/^## \[${{ steps.version.outputs.version }}\]/,/^## \[[0-9\.]+\]/{/^\[[0-9\.]+\]/!p;}' CHANGELOG.md | sed '1d;$d' > /tmp/release-body.md

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          body_path: /tmp/release-body.md
          tag_name: v${{ steps.version.outputs.version }}
          files: jgosmann-macos_antivirus-${{ steps.version.outputs.version }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
